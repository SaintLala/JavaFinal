{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\JAVa\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [hoveredMessage, setHoveredMessage] = useState(null);\n  const [editingMessage, setEditingMessage] = useState(null);\n  useEffect(() => {\n    // Escuchar mensajes nuevos\n    socket.on('chat_message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Escuchar mensajes editados\n    socket.on('edit_message', data => {\n      setMessages(prevMessages => prevMessages.map(msg => msg.id === data.id ? {\n        ...msg,\n        mensaje: data.mensaje\n      } : msg));\n    });\n\n    // Escuchar mensajes eliminados\n    socket.on('delete_message', messageId => {\n      setMessages(prevMessages => prevMessages.filter(msg => msg.id !== messageId));\n    });\n\n    // Cargar mensajes existentes al conectarse\n    socket.on('initial_messages', data => {\n      setMessages(data);\n    });\n    return () => {\n      socket.off('chat_message');\n      socket.off('edit_message');\n      socket.off('delete_message');\n      socket.off('initial_messages');\n    };\n  }, []);\n  const handleLogin = () => {\n    if (username.trim()) {\n      socket.emit('set_username', username);\n      setIsLoggedIn(true);\n    }\n  };\n  const handleSendMessage = () => {\n    if (message.trim()) {\n      const newMessage = {\n        id: Date.now(),\n        // ID único basado en la hora\n        usuario: username,\n        mensaje: message\n      };\n      socket.emit('chat_message', newMessage);\n      setMessage('');\n    }\n  };\n  const handleEditMessage = msg => {\n    setEditingMessage(msg); // Preparar el mensaje para edición\n    setMessage(msg.mensaje); // Poner el texto del mensaje en el campo de entrada\n  };\n\n  const handleSaveEdit = () => {\n    if (editingMessage) {\n      const updatedMessage = {\n        ...editingMessage,\n        mensaje: message\n      };\n      socket.emit('edit_message', updatedMessage); // Notificar al servidor\n      setEditingMessage(null); // Salir del modo edición\n      setMessage(''); // Limpiar el campo de entrada\n    }\n  };\n\n  const handleDeleteMessage = msg => {\n    socket.emit('delete_message', msg.id); // Notificar al servidor\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ingresa tu nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Nombre de usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Entrar al chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: msg.usuario === username ? 'self' : '',\n          onMouseEnter: () => setHoveredMessage(msg.id),\n          onMouseLeave: () => setHoveredMessage(null),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.usuario, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), msg.mensaje, hoveredMessage === msg.id && msg.usuario === username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditMessage(msg),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteMessage(msg),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: editingMessage ? 'Editando mensaje...' : 'Escribe un mensaje...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editingMessage ? handleSaveEdit : handleSendMessage,\n        children: editingMessage ? 'Guardar' : 'Enviar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sGj+BEUfwGUs8es7MxaS/Tplrio=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","socket","App","username","setUsername","isLoggedIn","setIsLoggedIn","message","setMessage","messages","setMessages","hoveredMessage","setHoveredMessage","editingMessage","setEditingMessage","on","data","prevMessages","map","msg","id","mensaje","messageId","filter","off","handleLogin","trim","emit","handleSendMessage","newMessage","Date","now","usuario","handleEditMessage","handleSaveEdit","updatedMessage","handleDeleteMessage","e","target","value"],"sources":["C:/Users/USUARIO/Desktop/JAVa/front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\n\nconst socket = io('http://localhost:3000');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [hoveredMessage, setHoveredMessage] = useState(null);\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  useEffect(() => {\n    // Escuchar mensajes nuevos\n    socket.on('chat_message', (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    // Escuchar mensajes editados\n    socket.on('edit_message', (data) => {\n      setMessages((prevMessages) =>\n        prevMessages.map((msg) =>\n          msg.id === data.id ? { ...msg, mensaje: data.mensaje } : msg\n        )\n      );\n    });\n\n    // Escuchar mensajes eliminados\n    socket.on('delete_message', (messageId) => {\n      setMessages((prevMessages) =>\n        prevMessages.filter((msg) => msg.id !== messageId)\n      );\n    });\n\n    // Cargar mensajes existentes al conectarse\n    socket.on('initial_messages', (data) => {\n      setMessages(data);\n    });\n\n    return () => {\n      socket.off('chat_message');\n      socket.off('edit_message');\n      socket.off('delete_message');\n      socket.off('initial_messages');\n    };\n  }, []);\n\n  const handleLogin = () => {\n    if (username.trim()) {\n      socket.emit('set_username', username);\n      setIsLoggedIn(true);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim()) {\n      const newMessage = {\n        id: Date.now(), // ID único basado en la hora\n        usuario: username,\n        mensaje: message,\n      };\n      socket.emit('chat_message', newMessage);\n      setMessage('');\n    }\n  };\n\n  const handleEditMessage = (msg) => {\n    setEditingMessage(msg); // Preparar el mensaje para edición\n    setMessage(msg.mensaje); // Poner el texto del mensaje en el campo de entrada\n  };\n\n  const handleSaveEdit = () => {\n    if (editingMessage) {\n      const updatedMessage = { ...editingMessage, mensaje: message };\n      socket.emit('edit_message', updatedMessage); // Notificar al servidor\n      setEditingMessage(null); // Salir del modo edición\n      setMessage(''); // Limpiar el campo de entrada\n    }\n  };\n\n  const handleDeleteMessage = (msg) => {\n    socket.emit('delete_message', msg.id); // Notificar al servidor\n  };\n\n  return (\n    <div className=\"container\">\n      {!isLoggedIn ? (\n        <div>\n          <h2>Ingresa tu nombre</h2>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Nombre de usuario\"\n          />\n          <button onClick={handleLogin}>Entrar al chat</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Chat</h2>\n          <ul>\n            {messages.map((msg) => (\n              <li\n                key={msg.id}\n                className={msg.usuario === username ? 'self' : ''}\n                onMouseEnter={() => setHoveredMessage(msg.id)}\n                onMouseLeave={() => setHoveredMessage(null)}\n              >\n                <strong>{msg.usuario}: </strong>\n                {msg.mensaje}\n                {hoveredMessage === msg.id && msg.usuario === username && (\n                  <div className=\"actions\">\n                    <button onClick={() => handleEditMessage(msg)}>\n                      Editar\n                    </button>\n                    <button onClick={() => handleDeleteMessage(msg)}>\n                      Eliminar\n                    </button>\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder={\n              editingMessage ? 'Editando mensaje...' : 'Escribe un mensaje...'\n            }\n          />\n          <button\n            onClick={editingMessage ? handleSaveEdit : handleSendMessage}\n          >\n            {editingMessage ? 'Guardar' : 'Enviar'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}